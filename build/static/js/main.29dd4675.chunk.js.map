{"version":3,"sources":["productList.js","service/api.js","components/pageViewDrawer.jsx","loading.gif","pages/home.jsx","layout/index.js","reportWebVitals.js","index.js"],"names":["module","exports","title","value","axios","require","default","url","ax_get","a","path","u","get","data","ax_post","params","post","PageViewDrawer","pageView","useState","visible","setVisible","onClose","type","size","onClick","block","placement","closable","width","src","height","frameBorder","style","marginTop","position","right","bottom","padding","background","textAlign","borderTop","Card","Meta","Home","product","setProduct","setselectedproduct","loading","setLoading","Number","Date","setForceupdate","api","list","status","return","e","message","destroy","name","useEffect","getProductAll","top","percent","showInfo","xs","sm","md","lg","xl","loadingGIF","color","fontSize","borderBottom","maxWidth","extra","Search","placeholder","allowClear","enterButton","borderLeft","borderRight","onSearch","margin","active","layout","marginLeft","marginRight","orientation","productList","map","productType","Google","client","slot","display","layoutKey","format","length","gutter","paddingTop","marginBottom","hidden","ii","source","float","minHeight","overflow","cover","alt","img","price","Layout","NoMatch","image","description","window","location","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29dd4675.chunk.js","sourcesContent":["module.exports = [\r\n    {\r\n        title: \"Headphone\",\r\n        value: \"headphone\"\r\n    },\r\n    {\r\n        title: \"Keyboards\",\r\n        value: \"keyboards\"\r\n    },\r\n    {\r\n        title: \"Micro/SD card\",\r\n        value: \"micro_sd_card\"\r\n    },\r\n    {\r\n        title: \"Microphone\",\r\n        value: \"microphone\"\r\n    },\r\n    {\r\n        title: \"Casing\",\r\n        value: \"casing\"\r\n    },\r\n    {\r\n        title: \"Casing Cooler\",\r\n        value: \"casing_coolerr\"\r\n    },\r\n    {\r\n        title: \"Power Supply\",\r\n        value: \"power_supply\"\r\n    },\r\n    {\r\n        title: \"Water or Liquid Cooling\",\r\n        value: \"water_or_liquid_cooling\"\r\n    },\r\n    {\r\n        title: \"Processor\",\r\n        value: \"processor\"\r\n    },\r\n    {\r\n        title: \"CPU Cooler\",\r\n        value: \"cpu_Cooler\"\r\n    },\r\n    {\r\n        title: \"Motherboard\",\r\n        value: \"motherboard\"\r\n    },\r\n    {\r\n        title: \"Graphics Card\",\r\n        value: \"graphics_card\"\r\n    },\r\n    {\r\n        title: \"Portable Hard Disk Drive\",\r\n        value: \"portable_hard_disk_drive\"\r\n    },\r\n    {\r\n        title: \"Hard Disk Drive\",\r\n        value: \"hard_disk_drive\"\r\n    },\r\n    {\r\n        title: \"SSD Hard Disk\",\r\n        value: \"ssd_hard_disk\"\r\n    },\r\n    {\r\n        title: \"Ram\",\r\n        value: \"ram\"\r\n    },\r\n    {\r\n        title: \"Laptop Ram\",\r\n        value: \"laptop_ram\"\r\n    },\r\n    {\r\n        title: \"Portable SSD Hard Disk\",\r\n        value: \"portable_ssd_hard_disk\"\r\n    },\r\n    {\r\n        title: \"Sound Card\",\r\n        value: \"sound_card\"\r\n    },\r\n    {\r\n        title: \"Optical Hdd\",\r\n        value: \"optical_hdd\"\r\n    },\r\n    {\r\n        title: \"Stabilizer\",\r\n        value: \"stabilizer\"\r\n    },\r\n    {\r\n        title: \"Vertical Graphics Card Holder\",\r\n        value: \"vertical_graphics_card_holder\"\r\n    },\r\n    {\r\n        title: \"Monitor\",\r\n        value: \"monitor\"\r\n    },\r\n    {\r\n        title: \"Server Networking\",\r\n        value: \"server_networking\"\r\n    },\r\n    // {\r\n    //     title: \"\",\r\n    //     value: \"\"\r\n    // },\r\n]","/* eslint-disable */\r\nconst axios = require('axios').default\r\n\r\nconst url_1 = \"http://localhost:5011/xxyyzz\"\r\nconst url_2 = \"https://core.stupidarnob.com/xxyyzz\"\r\n\r\nconst url = url_2\r\n\r\nconst ax_get = async ({path}) => {\r\n    let u = url + \"\" + path\r\n    return await (await axios.get(u)).data\r\n}\r\n\r\n\r\n\r\nconst ax_post = async ({path, params}) => {\r\n    let u = url + \"\" + path\r\n    return await (await axios.post(u, params)).data\r\n}\r\n\r\n\r\nexport default {\r\n    ax_get,\r\n    ax_post\r\n}","/* eslint-disable */\r\nimport React, { useState } from 'react';\r\nimport { Drawer, Button } from 'antd';\r\n\r\nfunction PageViewDrawer({ pageView }) {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const showDrawer = () => {\r\n        setVisible(true);\r\n    };\r\n    \r\n    const onClose = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"default\"\r\n                size=\"large\"\r\n                onClick={showDrawer}\r\n                block\r\n            >View</Button>\r\n\r\n            <Drawer\r\n                placement=\"right\"\r\n                closable\r\n                onClose={onClose}\r\n                visible={visible}\r\n                width={\"100%\"}\r\n            >\r\n                <iframe src={pageView} width=\"100%\" height=\"90%\" frameBorder=\"0\" style={{ marginTop: 40 }} />\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        width: '100%',\r\n                        padding: '10px 16px',\r\n                        background: '#fff',\r\n                        textAlign: 'right',\r\n                        borderTop: '1px solid #ebebeb'\r\n                    }}\r\n                >\r\n                    <Button type=\"primary\" block onClick={onClose}>Close</Button>\r\n                </div>\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageViewDrawer","export default __webpack_public_path__ + \"static/media/loading.c2ecd96c.gif\";","/* eslint-disable */\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { PageHeader, Row, Col, Card, Space, Input, Skeleton, Result, Select, Form, message, Progress, Tag, Divider } from 'antd';\r\nimport jscookie from 'js-cookie'\r\nimport AdSense from 'react-adsense';\r\n\r\nimport api from '../service/api'\r\nimport PageViewDrawer from '../components/pageViewDrawer'\r\nimport loadingGIF from './../loading.gif'\r\nimport productList from '../productList'\r\n\r\nimport SignIN from '../components/sign'\r\nimport AddToCart from '../components/addtocart'\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction Home() {\r\n\r\n    const [product, setProduct] = useState([])\r\n    const [selectedproduct, setselectedproduct] = useState(\"0\")\r\n    const [loading, setLoading] = useState(true)\r\n    const [_, setForceupdate] = useState(Number(new Date()))\r\n\r\n    useEffect(() => {\r\n        getProductAll()\r\n    }, [])\r\n\r\n\r\n    async function getProductAll() {\r\n        setLoading(true)\r\n        setProduct([])\r\n        let list = await api.ax_get({ path: \"/list\" })\r\n        if (list.status) {\r\n            setProduct(list.return)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    async function addForCart({ details }) {\r\n\r\n        let userid = jscookie.get(\"userid\")\r\n        await api.ax_post({\r\n            path: \"/addtocart\", params: {\r\n                userid,\r\n                details\r\n            }\r\n        })\r\n\r\n        message.destroy()\r\n        message.info(\"Add To Cart\")\r\n    }\r\n\r\n\r\n    async function productType(e) {\r\n        message.destroy()\r\n        // message.loading(\"Please wait...\", 0)\r\n        setProduct([])\r\n        setForceupdate(Number(new Date()))\r\n        setLoading(true)\r\n        setselectedproduct(\"0\")\r\n        let list = await api.ax_post({\r\n            path: \"/search\",\r\n            params: {\r\n                type: \"product\",\r\n                name: e\r\n            }\r\n        })\r\n        message.destroy()\r\n        message.destroy()\r\n        setForceupdate(Number(new Date()))\r\n        setProduct(list.return)\r\n        setselectedproduct(e)\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                loading &&\r\n                <>\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            right: 0,\r\n                            top: -10,\r\n                            width: '110%',\r\n                            position: \"fixed\",\r\n                            marginLeft: -20,\r\n                            marginRight: -20,\r\n                            zIndex: 99\r\n                        }}\r\n                    >\r\n                        <Progress percent={100} status=\"active\" showInfo={false} />\r\n                    </div>\r\n\r\n                    <div\r\n                        style={{\r\n                            width: '110%',\r\n                            position: \"fixed\",\r\n                            top: \"12%\",\r\n                        }}\r\n                    >\r\n                        <Row>\r\n                            <Col xs={2} sm={4} md={6} lg={8} xl={9} />\r\n                            <Col xs={22} sm={20} md={10} lg={8} xl={8}>\r\n                                <img src={loadingGIF} style={{ height: 250 }} />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            right: 0,\r\n                            bottom: 0,\r\n                            width: '100%',\r\n                            padding: '10px 16px',\r\n                            textAlign: 'right',\r\n                            borderTop: '1px solid #fff'\r\n                        }}\r\n                    >\r\n                        <p style={{ color: \"black\", fontSize: 10 }}>v2.0.1</p>\r\n                    </div>\r\n                </>\r\n            }\r\n            {\r\n                !loading &&\r\n                <div>\r\n                    <center>\r\n                        <PageHeader\r\n                            title=\"42-1\"\r\n                            style={{ borderBottom: \"1px solid #e9e9e9\", maxWidth: 1400, }}\r\n                            extra={[\r\n                                // <AddToCart />,\r\n                                // <SignIN />,\r\n                                <Input.Search\r\n                                    placeholder={\"Search Product Name\"}\r\n                                    allowClear\r\n                                    enterButton\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        borderLeft: \"none\",\r\n                                        borderRight: \"none\",\r\n                                        borderTop: \"none\"\r\n                                    }}\r\n                                    onSearch={async (e) => {\r\n                                        message.destroy()\r\n                                        message.loading(\"Searching, Please wait...\", 0)\r\n                                        let list = await api.ax_post({\r\n                                            path: \"/search\",\r\n                                            params: {\r\n                                                type: \"search\",\r\n                                                name: e\r\n                                            }\r\n                                        })\r\n                                        message.destroy()\r\n                                        message.destroy()\r\n                                        setProduct(list.return)\r\n                                    }}\r\n                                    size=\"middle\"\r\n                                />\r\n                            ]}\r\n                        />\r\n                    </center>\r\n\r\n                    <Space />\r\n\r\n                    <div style={{ margin: 20, maxWidth: 1400, }}>\r\n                        <Skeleton active loading={loading} />\r\n                    </div>\r\n                </div>\r\n            }\r\n            {\r\n                !loading &&\r\n                <>\r\n                    {/* NOTE Searching */}\r\n                    <center>\r\n                        <Form\r\n                            layout=\"vertical\"\r\n                            style={{\r\n                                padding: 10,\r\n                                marginLeft: \"auto\",\r\n                                marginRight: \"auto\"\r\n                            }}\r\n                        >\r\n                            <div\r\n                                style={{ maxWidth: 1200, textAlign: \"left\" }}\r\n                            >\r\n                                <Divider orientation=\"left\">Products</Divider>\r\n                                {\r\n                                    productList.map(e =>\r\n                                        <Tag color={\"green\"} style={{ margin: 5 }}>\r\n                                            <a onClick={() => productType(e.value)}>{e.title}</a>\r\n                                        </Tag>\r\n                                    )\r\n                                }\r\n                                <Divider />\r\n                            </div>\r\n                        </Form>\r\n                        <AdSense.Google\r\n                            client='ca-pub-4319664345109203'\r\n                            slot='1314312404'\r\n                            style={{\r\n                                display: \"inline-block\",\r\n                                width: 360,\r\n                                height: 90\r\n                            }}\r\n                            layoutKey=\"-eo-29+1q-1j+dw\"\r\n                            format='fluid'\r\n                        />\r\n                    </center>\r\n\r\n\r\n                    {/* NOTE No Product Found */}\r\n                    {\r\n                        product.length === 0 &&\r\n                        <Result\r\n                            status=\"warning\"\r\n                            title=\"No Product Found\"\r\n                        />\r\n                    }\r\n\r\n                    {/* NOTE Product Details */}\r\n                    <center>\r\n                        <Row\r\n                            gutter={24}\r\n                            style={{\r\n                                marginLeft: 0,\r\n                                marginRight: 0,\r\n                                paddingTop: 10,\r\n                                maxWidth: 1200,\r\n                                marginBottom: 100\r\n                            }}\r\n                            hidden={product.length === 0 ? true : false}\r\n                        >\r\n                            {\r\n                                product.map(ii =>\r\n                                    <Col\r\n                                        xs={12} sm={10} md={8} lg={6} xl={6}\r\n                                        style={{ paddingTop: 10 }}\r\n                                    >\r\n                                        <Card\r\n                                            title={\r\n                                                ii.source === \"startech\" ? (\r\n                                                    <img\r\n                                                        src={\"https://www.startech.com.bd/image/catalog/logo.png\"}\r\n                                                        style={{ height: 32, width: 85, float: \"left\" }}\r\n                                                    />\r\n                                                ) : ii.source === \"ryanscomputers\" ? (\r\n                                                    <img\r\n                                                        src={\"https://www.ryanscomputers.com/assets/website/img/ryans-computers.svg\"}\r\n                                                        style={{ height: 32, width: 85, float: \"left\" }}\r\n                                                    />\r\n                                                ) : \"\"\r\n                                            }\r\n                                            style={{\r\n                                                minHeight: 460,\r\n                                                marginTop: 20,\r\n                                                marginBottom: 20,\r\n                                                overflow: \"hidden\"\r\n                                            }}\r\n                                            cover={\r\n                                                <img\r\n                                                    style={{\r\n                                                        padding: 8,\r\n                                                        width: 120,\r\n                                                        height: 120,\r\n                                                        marginTop: 5\r\n                                                    }}\r\n                                                    alt={ii.name}\r\n                                                    src={ii.img}\r\n                                                />\r\n                                            }\r\n                                        >\r\n\r\n                                            <b>{ii.name}</b>\r\n\r\n                                            <div\r\n                                                style={{\r\n                                                    position: 'absolute',\r\n                                                    right: 0,\r\n                                                    bottom: 44,\r\n                                                    width: '100%',\r\n                                                }}\r\n                                            >\r\n                                                <PageViewDrawer pageView={ii.url} />\r\n                                            </div>\r\n\r\n                                            <div\r\n                                                style={{\r\n                                                    position: 'absolute',\r\n                                                    right: 0,\r\n                                                    bottom: 0,\r\n                                                    width: '100%',\r\n                                                    padding: '10px 16px',\r\n                                                    background: '#426184',\r\n                                                    textAlign: 'right',\r\n                                                    borderTop: '1px solid #fff'\r\n                                                }}\r\n                                            >\r\n                                                <b style={{ color: \"#fff\" }}>Price: {ii.price}</b>\r\n                                            </div>\r\n                                        </Card>\r\n                                    </Col>\r\n                                )\r\n                            }\r\n                        </Row>\r\n                    </center>\r\n                </>\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Empty, Button } from 'antd';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\nimport Home from './../pages/home'\r\n\r\nexport default function Layout() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n                <Route path=\"*\">\r\n                    <NoMatch />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\n\r\nfunction NoMatch() {\r\n    return (\r\n        <Empty\r\n            image=\"https://freefrontend.com/assets/img/html-funny-404-pages/HTML-404-Page.gif\"\r\n            description={\r\n                <span>\r\n                    Link not found\r\n                </span>\r\n            }\r\n        >\r\n            <Button type=\"primary\" onClick={() => window.location.href = \"/\"}>Go To Home</Button>\r\n        </Empty>\r\n    );\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport Layout from './layout';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Layout />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}