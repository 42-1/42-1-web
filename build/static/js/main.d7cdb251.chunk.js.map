{"version":3,"sources":["service/api.js","pages/home.jsx","reportWebVitals.js","index.js"],"names":["axios","require","default","url","ax_get","a","path","u","get","data","ax_post","params","post","Meta","Card","Home","useState","product","setProduct","loading","setLoading","api","list","status","return","useEffect","getProductAll","title","style","borderBottom","layout","padding","gutter","span","Item","label","placeholder","width","onChange","e","type","name","target","value","size","message","destroy","Option","length","marginTop","marginRight","marginLeft","hidden","map","ii","xs","sm","md","lg","xl","paddingTop","paddingLeft","paddingRight","minHeight","cover","zIndex","alt","src","img","extra","icon","LinkOutlined","onClick","window","open","description","details","position","right","bottom","background","textAlign","borderTop","price","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7cdb251.chunk.js","sourcesContent":["/* eslint-disable */\r\nconst axios = require('axios').default\r\n\r\nconst url_1 = \"http://localhost:5011/xxyyzz\"\r\nconst url_2 = \"https://core.stupidarnob.com/xxyyzz\"\r\n\r\nconst url = url_2\r\n\r\nconst ax_get = async ({path}) => {\r\n    let u = url + \"\" + path\r\n    return await (await axios.get(u)).data\r\n}\r\n\r\n\r\n\r\nconst ax_post = async ({path, params}) => {\r\n    let u = url + \"\" + path\r\n    return await (await axios.post(u, params)).data\r\n}\r\n\r\n\r\nexport default {\r\n    ax_get,\r\n    ax_post\r\n}","import { Fragment, useEffect, useState } from 'react';\r\nimport { PageHeader, Row, Col, Card, Space, Input, Skeleton, Button, Result, Select, Form, message } from 'antd';\r\nimport { LinkOutlined } from '@ant-design/icons'\r\nimport api from '../service/api'\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction Home() {\r\n\r\n    const [product, setProduct] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        getProductAll()\r\n    }, [])\r\n\r\n    async function getProductAll() {\r\n        setLoading(true)\r\n        let list = await api.ax_get({ path: \"/list\" })\r\n        if (list.status) {\r\n            setProduct(list.return)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <PageHeader\r\n                title=\"Shop 421\"\r\n                style={{ borderBottom: \"1px solid black\" }}\r\n            />\r\n\r\n            <Space />\r\n\r\n            <Skeleton loading={loading}>\r\n                <Form layout=\"vertical\" style={{ padding: 20 }}>\r\n                    <Row gutter={16}>\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Search\">\r\n                                <Input\r\n                                    placeholder={\"Search Product Name\"}\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                    }}\r\n                                    onChange={async (e) => {\r\n                                        let list = await api.ax_post({\r\n                                            path: \"/search\",\r\n                                            params: {\r\n                                                type: \"search\",\r\n                                                name: e.target.value\r\n                                            }\r\n                                        })\r\n                                        setProduct(list.return)\r\n                                    }}\r\n                                    size=\"large\"\r\n                                />\r\n                            </Form.Item>\r\n                        </Col>\r\n\r\n                        <Col span={12}>\r\n                            <Form.Item label=\"Product Type\">\r\n                                <Select\r\n                                    size=\"large\"\r\n                                    placeholder=\"Select Product Type\"\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                    }}\r\n                                    onChange={async (e) => {\r\n                                        message.destroy()\r\n                                        message.loading(\"Please wait...\", 0)\r\n                                        let list = await api.ax_post({\r\n                                            path: \"/search\",\r\n                                            params: {\r\n                                                type: \"product\",\r\n                                                name: e\r\n                                            }\r\n                                        })\r\n                                        message.destroy()\r\n                                        message.destroy()\r\n                                        setProduct(list.return)\r\n                                    }}\r\n                                >\r\n                                    <Select.Option key=\"1\" value=\"headphone\">Headphone</Select.Option>\r\n                                    <Select.Option key=\"2\" value=\"keyboards\">Keyboards</Select.Option>\r\n                                    <Select.Option key=\"3\" value=\"micro-sd-card\">Micro/SD card</Select.Option>\r\n                                    <Select.Option key=\"4\" value=\"microphone\">Microphone</Select.Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n\r\n                {\r\n                    product.length === 0 &&\r\n                    <Result\r\n                        status=\"warning\"\r\n                        title=\"No Product Found\"\r\n                    />\r\n                }\r\n\r\n                <Row\r\n                    gutter={24}\r\n                    style={{\r\n                        marginTop: 2,\r\n                        marginRight: 0,\r\n                        marginLeft: 0,\r\n                        padding: 10\r\n                    }}\r\n                    hidden={product.length === 0 ? true : false}\r\n                >\r\n                    {\r\n                        product.map(ii =>\r\n                            <Col\r\n                                xs={24} sm={24} md={24} lg={24} xl={4}\r\n                                style={{ paddingTop: 10, paddingLeft: 30, paddingRight: 30 }}\r\n                            >\r\n                                <Card\r\n                                    title={\"Startech\"}\r\n                                    style={{ minHeight: 600, marginTop: 20 }}\r\n                                    cover={<img style={{ zIndex: 10, padding: 20 }} alt=\"aaxx\" src={ii.img} />}\r\n                                    extra={[\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            icon={<LinkOutlined />}\r\n                                            onClick={() => window.open(ii.url, \"_blank\")}\r\n                                        />\r\n                                    ]}\r\n                                    onClick={() => window.open(ii.url, \"_blank\")}\r\n                                >\r\n\r\n                                    <b>{ii.name}</b>\r\n                                    <Meta style={{ marginTop: 5 }} description={ii.details} />\r\n\r\n                                    <div\r\n                                        style={{\r\n                                            position: 'absolute',\r\n                                            right: 0,\r\n                                            bottom: 0,\r\n                                            width: '100%',\r\n                                            padding: '10px 16px',\r\n                                            background: '#fff',\r\n                                            textAlign: 'right',\r\n                                            borderTop: '1px solid black'\r\n                                        }}\r\n                                    >\r\n                                        <h3>\r\n                                            <b>Price: {ii.price}</b>\r\n                                        </h3>\r\n                                    </div>\r\n                                </Card>\r\n                            </Col>\r\n                        )\r\n                    }\r\n                </Row>\r\n            </Skeleton>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport Home from './pages/home';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Home />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}