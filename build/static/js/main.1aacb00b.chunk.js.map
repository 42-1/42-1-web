{"version":3,"sources":["service/api.js","components/pageViewDrawer.jsx","components/sign.jsx","components/addtocart.jsx","pages/home.jsx","layout/index.js","reportWebVitals.js","index.js"],"names":["axios","require","default","url","ax_get","a","path","u","get","data","ax_post","params","post","PageViewDrawer","pageView","useState","visible","setVisible","onClose","type","size","onClick","block","placement","closable","width","src","height","frameBorder","style","marginTop","position","right","bottom","padding","background","textAlign","borderTop","SignIN","username","setUsername","mobileno","setMobileno","Number","Date","setForceUpdate","singIn","message","destroy","info","API","details","jscookie","set","user_id","window","location","reload","hidden","danger","remove","title","layout","Item","label","placeholder","onChange","e","target","value","marginRight","AddToCart","Meta","Card","Home","product","setProduct","loading","setLoading","api","list","status","return","userid","useEffect","getProductAll","borderBottom","maxWidth","extra","margin","active","gutter","xs","sm","md","lg","xl","name","Option","length","marginLeft","paddingTop","marginBottom","map","ii","source","float","minHeight","cover","alt","img","description","disabled","addForCart","price","Layout","NoMatch","image","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1aacb00b.chunk.js","sourcesContent":["/* eslint-disable */\r\nconst axios = require('axios').default\r\n\r\nconst url_1 = \"http://localhost:5011/xxyyzz\"\r\nconst url_2 = \"https://core.stupidarnob.com/xxyyzz\"\r\n\r\nconst url = url_2\r\n\r\nconst ax_get = async ({path}) => {\r\n    let u = url + \"\" + path\r\n    return await (await axios.get(u)).data\r\n}\r\n\r\n\r\n\r\nconst ax_post = async ({path, params}) => {\r\n    let u = url + \"\" + path\r\n    return await (await axios.post(u, params)).data\r\n}\r\n\r\n\r\nexport default {\r\n    ax_get,\r\n    ax_post\r\n}","/* eslint-disable */\r\nimport React, { useState } from 'react';\r\nimport { Drawer, Button } from 'antd';\r\n\r\nfunction PageViewDrawer({ pageView }) {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const showDrawer = () => {\r\n        setVisible(true);\r\n    };\r\n    \r\n    const onClose = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                onClick={showDrawer}\r\n                block\r\n            >View</Button>\r\n\r\n            <Drawer\r\n                placement=\"right\"\r\n                closable={false}\r\n                onClose={onClose}\r\n                visible={visible}\r\n                width={\"100%\"}\r\n            >\r\n                <iframe src={pageView} width=\"100%\" height=\"90%\" frameBorder=\"0\" style={{ marginTop: 40 }} />\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        width: '100%',\r\n                        padding: '10px 16px',\r\n                        background: '#fff',\r\n                        textAlign: 'right',\r\n                        borderTop: '1px solid #ebebeb'\r\n                    }}\r\n                >\r\n                    <Button type=\"default\" block onClick={onClose}>Close</Button>\r\n                </div>\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageViewDrawer","/* eslint-disable */\r\nimport React, { useState } from 'react';\r\nimport { Drawer, Button, Form, Input, message } from 'antd';\r\nimport jscookie from 'js-cookie'\r\nimport API from './../service/api'\r\n\r\nfunction SignIN({ pageView }) {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [mobileno, setMobileno] = useState(\"\");\r\n    const [forceUpdate, setForceUpdate] = useState(Number(new Date()));\r\n\r\n    const showDrawer = () => {\r\n        setVisible(true);\r\n    };\r\n\r\n    const onClose = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    const singIn = async () => {\r\n\r\n        if (username === \"\" || mobileno === \"\") {\r\n            message.destroy()\r\n            message.info(\"Please type your usename or mobile no\")\r\n        } else {\r\n            \r\n            let details = await API.ax_post({\r\n                path: \"/sign\",\r\n                params: {\r\n                    username,\r\n                    mobileno\r\n                }\r\n            })\r\n    \r\n            jscookie.set(\"userid\", details.user_id)\r\n            setVisible(false);\r\n            window.location.reload()\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"primary\"\r\n                onClick={showDrawer}\r\n                hidden={jscookie.get(\"userid\")}\r\n            >Login</Button>\r\n\r\n            <Button\r\n                type=\"primary\"\r\n                danger\r\n                onClick={() => {\r\n                    message.destroy()\r\n                    message.info(\"User Logout\")\r\n                    jscookie.remove(\"userid\")\r\n                    setForceUpdate(Number(new Date()))\r\n                    window.location.reload()\r\n                }}\r\n                hidden={!jscookie.get(\"userid\")}\r\n            >Logout</Button>\r\n\r\n            <Drawer\r\n                title={\"Sign\"}\r\n                placement=\"right\"\r\n                closable\r\n                onClose={onClose}\r\n                visible={visible}\r\n                width={\"30%\"}\r\n            >\r\n\r\n                <Form layout={\"vertical\"}>\r\n                    <Form.Item label={\"Username\"}>\r\n                        <Input placeholder={\"Username\"} onChange={(e) => setUsername(e.target.value)} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label={\"Mobile No\"}>\r\n                        <Input placeholder={\"Mobile No\"} onChange={(e) => setMobileno(e.target.value)} />\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        width: '100%',\r\n                        padding: '10px 16px',\r\n                        background: '#fff',\r\n                        textAlign: 'right',\r\n                        borderTop: '1px solid #ebebeb'\r\n                    }}\r\n                >\r\n                    <Button type=\"default\" onClick={onClose} style={{ marginRight: 5 }}>Close</Button>\r\n                    <Button type=\"primary\" onClick={singIn}>Login</Button>\r\n                </div>\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignIN","/* eslint-disable */\r\nimport React, { useState } from 'react';\r\nimport { Drawer, Button } from 'antd';\r\n\r\nfunction AddToCart({ pageView }) {\r\n\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const showDrawer = () => {\r\n        setVisible(true);\r\n    };\r\n    \r\n    const onClose = () => {\r\n        setVisible(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                type=\"default\"\r\n                onClick={showDrawer}\r\n            >\r\n                Add To Cart\r\n            </Button>\r\n\r\n            <Drawer\r\n                title=\"Add To Cart\"\r\n                placement=\"right\"\r\n                closable\r\n                onClose={onClose}\r\n                visible={visible}\r\n                width={\"100%\"}\r\n            >\r\n                \r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        width: '100%',\r\n                        padding: '10px 16px',\r\n                        background: '#fff',\r\n                        textAlign: 'right',\r\n                        borderTop: '1px solid #ebebeb'\r\n                    }}\r\n                >\r\n                    <Button type=\"default\" block onClick={onClose}>Close</Button>\r\n                </div>\r\n            </Drawer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddToCart","/* eslint-disable */\r\nimport { Fragment, useEffect, useState } from 'react';\r\nimport { PageHeader, Row, Col, Card, Space, Input, Skeleton, Button, Result, Select, Form, message } from 'antd';\r\nimport jscookie from 'js-cookie'\r\n\r\nimport api from '../service/api'\r\nimport PageViewDrawer from '../components/pageViewDrawer'\r\nimport SignIN from '../components/sign'\r\nimport AddToCart from '../components/addtocart'\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction Home() {\r\n\r\n    const [product, setProduct] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    \r\n    useEffect(() => {\r\n        getProductAll()\r\n    }, [])\r\n\r\n\r\n    async function getProductAll() {\r\n        setLoading(true)\r\n        setProduct([])\r\n        let list = await api.ax_get({ path: \"/list\" })\r\n        if (list.status) {\r\n            setProduct(list.return)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    async function addForCart({ details }) {\r\n\r\n        let userid = jscookie.get(\"userid\")\r\n        await api.ax_post({\r\n            path: \"/addtocart\", params: {\r\n                userid,\r\n                details\r\n            }\r\n        })\r\n\r\n        message.destroy()\r\n        message.info(\"Add To Cart\")\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <center>\r\n                <PageHeader\r\n                    title=\"42-1\"\r\n                    style={{ borderBottom: \"1px solid white\", maxWidth: 1400, }}\r\n                    extra={[\r\n                        <AddToCart />,\r\n                        <SignIN />,\r\n                    ]}\r\n                />\r\n\r\n                <Space />\r\n\r\n                <div style={{ margin: 20,  maxWidth: 1400, }}>\r\n                    <Skeleton active loading={loading} />\r\n                </div>\r\n            </center>\r\n\r\n            {\r\n                !loading &&\r\n                <>\r\n                    {/* NOTE Searching */}\r\n                    <center>\r\n                        <Form layout=\"vertical\" style={{ padding: 10 }}>\r\n                            <Row gutter={16} style={{ maxWidth: 1400 }}>\r\n                                <Col\r\n                                    xs={24} sm={24} md={12} lg={12} xl={12}\r\n                                >\r\n                                    <Form.Item label=\"Search\">\r\n                                        <Input\r\n                                            placeholder={\"Search Product Name\"}\r\n                                            style={{\r\n                                                width: \"100%\",\r\n                                            }}\r\n                                            onChange={async (e) => {\r\n                                                let list = await api.ax_post({\r\n                                                    path: \"/search\",\r\n                                                    params: {\r\n                                                        type: \"search\",\r\n                                                        name: e.target.value\r\n                                                    }\r\n                                                })\r\n                                                setProduct(list.return)\r\n                                            }}\r\n                                            size=\"large\"\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n\r\n                                <Col\r\n                                    xs={24} sm={24} md={12} lg={12} xl={12}\r\n                                >\r\n                                    <Form.Item label=\"Product Type\">\r\n                                        <Select\r\n                                            size=\"large\"\r\n                                            placeholder=\"Select Product Type\"\r\n                                            style={{\r\n                                                width: \"100%\",\r\n                                            }}\r\n                                            onChange={async (e) => {\r\n                                                message.destroy()\r\n                                                message.loading(\"Please wait...\", 0)\r\n                                                setProduct([])\r\n                                                setLoading(true)\r\n                                                let list = await api.ax_post({\r\n                                                    path: \"/search\",\r\n                                                    params: {\r\n                                                        type: \"product\",\r\n                                                        name: e\r\n                                                    }\r\n                                                })\r\n                                                message.destroy()\r\n                                                message.destroy()\r\n                                                setProduct(list.return)\r\n                                                setLoading(false)\r\n                                            }}\r\n                                        >\r\n                                            <Select.Option key=\"1\" value=\"headphone\">Headphone</Select.Option>\r\n                                            <Select.Option key=\"2\" value=\"keyboards\">Keyboards</Select.Option>\r\n                                            <Select.Option key=\"3\" value=\"micro-sd-card\">Micro/SD card</Select.Option>\r\n                                            <Select.Option key=\"4\" value=\"microphone\">Microphone</Select.Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </center>\r\n\r\n\r\n                    {/* NOTE No Product Found */}\r\n                    {\r\n                        product.length === 0 &&\r\n                        <Result\r\n                            status=\"warning\"\r\n                            title=\"No Product Found\"\r\n                        />\r\n                    }\r\n\r\n                    {/* NOTE Product Details */}\r\n                    <center>\r\n                        <Row\r\n                            gutter={24}\r\n                            style={{\r\n                                marginLeft: 0,\r\n                                marginRight: 0,\r\n                                paddingTop: 10,\r\n                                maxWidth: 1400,\r\n                                marginBottom: 100\r\n                            }}\r\n                            hidden={product.length === 0 ? true : false}\r\n                        >\r\n                            {\r\n                                product.map(ii =>\r\n                                    <Col\r\n                                        xs={12} sm={12} md={12} lg={8} xl={4}\r\n                                        style={{ paddingTop: 10 }}\r\n                                    >\r\n                                        <Card\r\n                                            title={\r\n                                                ii.source === \"startech\" &&\r\n                                                <img\r\n                                                    src={\"https://www.startech.com.bd/image/catalog/logo.png\"}\r\n                                                    style={{ height: 32, width: 85, float: \"left\" }}\r\n                                                />\r\n                                            }\r\n                                            style={{\r\n                                                minHeight: 550,\r\n                                                marginTop: 20,\r\n                                                marginBottom: 20,\r\n                                            }}\r\n                                            cover={\r\n                                                <img\r\n                                                    style={{\r\n                                                        padding: 8,\r\n                                                        width: 120,\r\n                                                        height: 120,\r\n                                                        marginTop: 5\r\n                                                    }}\r\n                                                    alt={ii.name}\r\n                                                    src={ii.img}\r\n                                                />\r\n                                            }\r\n                                        >\r\n\r\n                                            <b>{ii.name}</b>\r\n                                            <Meta style={{ marginTop: 5 }} description={ii.details} />\r\n\r\n                                            <div\r\n                                                style={{\r\n                                                    position: 'absolute',\r\n                                                    right: 0,\r\n                                                    bottom: 65,\r\n                                                    width: '100%',\r\n                                                    marginBottom: 2\r\n                                                }}\r\n                                            >\r\n                                                <Button\r\n                                                    type=\"primary\"\r\n                                                    size=\"small\"\r\n                                                    block\r\n                                                    disabled={!jscookie.get(\"userid\")}\r\n                                                    onClick={() => addForCart({ details: ii })}\r\n                                                >\r\n                                                   { jscookie.get(\"userid\") ? \"Add to Cart\" : \"Login Required\"}\r\n                                                </Button>\r\n                                            </div>\r\n                                            <div\r\n                                                style={{\r\n                                                    position: 'absolute',\r\n                                                    right: 0,\r\n                                                    bottom: 42,\r\n                                                    width: '100%',\r\n                                                }}\r\n                                            >\r\n                                                <PageViewDrawer pageView={ii.url} />\r\n                                            </div>\r\n                                            <div\r\n                                                style={{\r\n                                                    position: 'absolute',\r\n                                                    right: 0,\r\n                                                    bottom: 0,\r\n                                                    width: '100%',\r\n                                                    padding: '10px 16px',\r\n                                                    background: '#cdcdcd',\r\n                                                    textAlign: 'right',\r\n                                                    borderTop: '1px solid #cdcdcd'\r\n                                                }}\r\n                                            >\r\n                                                <b>Price: {ii.price}</b>\r\n                                            </div>\r\n                                        </Card>\r\n                                    </Col>\r\n                                )\r\n                            }\r\n                        </Row>\r\n                    </center>\r\n                </>\r\n            }\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Empty, Button } from 'antd';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Home from './../pages/home'\r\n\r\nexport default function Layout() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n\r\n\r\n                <Route path=\"*\">\r\n                    <NoMatch />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\n\r\nfunction NoMatch() {\r\n    return (\r\n        <Empty\r\n            image=\"https://freefrontend.com/assets/img/html-funny-404-pages/HTML-404-Page.gif\"\r\n            description={\r\n                <span>\r\n                    Link not found\r\n                </span>\r\n            }\r\n        >\r\n            <Button type=\"primary\" onClick={() => window.location.href = \"/\"}>Go To Home</Button>\r\n        </Empty>\r\n    );\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport Layout from './layout';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Layout />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}